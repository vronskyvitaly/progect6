// + [выполненно] Реализовать в коде пример работы с switch конструкцией. Спросить у пользователя какая сейчас погода и в инструкции написать как ему одеваться 

// делаем по типу мы получили данные из сервера о погоде
const weather = 2


// делаю условие case
switch (weather) {
    case  0: 
    case  1:
    case  2:
    case  3:
        console.log ("Cейчас на улице до 3 градуссов тепла");
    break;
    case  4: 
        console.log ("Второе условие");
    break;
    case  5: 
        console.log ("Третее условие");
    break;
    default:
        console.log('Нет таких значений')
}



// + [выполненно] С помощью цикла while вывести 10 раз в консоль надпись “ Я что процентов буду программистом ”

// делаю счетчик для цикла
let i = 0;

// с помощью цикла вывожу надпись 10 раз
while (i < 10){
    i++
    console.log ("Я что процентов буду программистом");
}




// + [выполненно] Объявить переменную age и присвоить ей значение 18 и с помощью тернального оператора создать условие при которой в консоли появится ответ пользователю нет 18 доступ на сайт закрыт или пользователю открыт доступ на сайт 

let myAge = 18 

myAge >= 18 ? console.log ("Доступ на сайт открыт"):console.log ("Увы, доступ на сайт закрыт")




// + [выполненно] Объявить переменную и с помощью оператора проверить его тип

// проверю верхнюю переменную 
console.log (typeof (myAge))



// + [выполненно] Сколько типов данных есть в js ( ответ в фото галерее на телефоне)

// В JavaScript есть 8 основных типов данных.

// Семь из них называют «примитивными» типами данных:
// number для любых чисел: целочисленных или чисел с плавающей точкой; целочисленные значения ограничены диапазоном ±(253-1).
// bigint для целых чисел произвольной длины.
// string для строк. Строка может содержать ноль или больше символов, нет отдельного символьного типа.
// boolean для true/false.
// null для неизвестных значений – отдельный тип, имеющий одно значение null.
// undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined.
// symbol для уникальных идентификаторов.

// И один не является «примитивным» и стоит особняком:
// object для более сложных структур данных.



// + [выполненно] Создать объект с двумя свойствами и реализовать в коде три примера создания копии объекта в котором будут те же свойства что и в оригинальном, только при изменении одного из свойств именно в копии, оригинальный объект не будет мутировать 
// + [выполненно] Создать объект с двумя свойствами name и age, с помощью функции создаем копию этого объекта и меняем одно из свойств, увеличиваем возраст на единицу, без изменения оригинального объекта! Отобразить копию в консоли .

const myObject = {
    name:"Vitaly",
    age: 33,
    info: {
        size: 186,
        weight: 80,
    }
}

function newCopyObject (object) {
    // первый вариант
    // object = Object.assign({},myObject)
    // второй вариант
    // object = {...myObject}
    // третий вариант 
    object = JSON.parse(JSON.stringify(myObject))
    object.age +=1
    object.info.size = 190
    object.sum = function() {
        console.log (`Меня зовут ${this.name} и мне ${this.age}`)
    }
    return object
}


const newPerson = newCopyObject(myObject)
newPerson.sum()
newPerson.age



// + [выполненно] Что такое метод объекта? (Реализовать пример в коде)
// это когда значение свойства обьекта является функция
// JavaScript Методы - это действия, которые можно выполнять над объектами. 
// JavaScript Метод - это свойство, содержащее определение функции. Методы - это функции, хранящиеся в виде свойств объекта.




// + [выполненно] Объявить функцию с дефолтным значением одного из параметра, вывести его в консоль. С помощью console.dir() посмотреть структуру этой функции. Дописать потом понял разработчик эту задачу или нет: ?

function sum (namber1, namber2 = 2) {
    let res = namber1 * namber2
    return res
}

console.log (sum(10))
console.dir(sum)




// + [выполненно] Создать стрелочную функцию которая неявно возвращает сумму двух чисел а + b,  потом создать функциональное выражение которое выводит значение выражения a - b

const sum2 = (a,b) => console.log (a+b);

const sum3 = function (a,b) {
    let result = a-b
    return result
}




// + [выполненно] Создать массив и вывести его индексы и значения в консоль

const myArrey = [1,2,3,4,5,80]

myArrey.forEach((i,value)=>{
    console.log(`${value}  и значение этого индекса ${[i]} `)
})